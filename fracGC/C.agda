{-# OPTIONS --without-K --safe #-}

module C where

open import Data.Empty
open import Data.Unit
open import Data.Sum
open import Data.Product
open import Relation.Binary.PropositionalEquality

open import Singleton

infixr 70 _รแตค_
infixr 60 _+แตค_
infixr 50 _โ_

------------------------------------------------------------------------------
-- Pi

data ๐ : Set
โฆ_โง : ๐ โ ฮฃ[ A โ Set ] A
data _โท_ : ๐ โ ๐ โ Set

data ๐ where
  ๐       : ๐
  _+แตค_    : ๐ โ ๐ โ ๐
  _รแตค_    : ๐ โ ๐ โ ๐
  Singแตค : ๐ โ ๐
  Recipแตค : ๐ โ ๐

โฆ ๐ โง = โค , tt
โฆ Tโ รแตค Tโ โง = zip _ร_ _,_ โฆ Tโ โง โฆ Tโ โง
โฆ Tโ +แตค Tโ โง = zip _โ_ (ฮป x _ โ injโ x) โฆ Tโ โง โฆ Tโ โง
โฆ Singแตค T โง = < uncurry Singleton , (ฮป y โ projโ y , refl) > โฆ T โง
โฆ Recipแตค T โง = < uncurry Recip , (ฮป _ _ โ tt) > โฆ T โง

data _โท_ where
  swapโ   : {tโ tโ : ๐} โ tโ +แตค tโ โท tโ +แตค tโ
  assoclโ : {tโ tโ tโ : ๐} โ tโ +แตค (tโ +แตค tโ) โท (tโ +แตค tโ) +แตค tโ
  assocrโ : {tโ tโ tโ : ๐} โ (tโ +แตค tโ) +แตค tโ โท tโ +แตค (tโ +แตค tโ)
  uniteโl : {t : ๐} โ ๐ รแตค t โท t
  unitiโl : {t : ๐} โ t โท ๐ รแตค t
  uniteโr : {t : ๐} โ t รแตค ๐ โท t
  unitiโr : {t : ๐} โ t โท t รแตค ๐
  swapโ   : {tโ tโ : ๐} โ tโ รแตค tโ โท tโ รแตค tโ
  assoclโ : {tโ tโ tโ : ๐} โ tโ รแตค (tโ รแตค tโ) โท (tโ รแตค tโ) รแตค tโ
  assocrโ : {tโ tโ tโ : ๐} โ (tโ รแตค tโ) รแตค tโ โท tโ รแตค (tโ รแตค tโ)
  dist    : {tโ tโ tโ : ๐} โ (tโ +แตค tโ) รแตค tโ โท (tโ รแตค tโ) +แตค (tโ รแตค tโ)
  factor  : {tโ tโ tโ : ๐} โ (tโ รแตค tโ) +แตค (tโ รแตค tโ) โท (tโ +แตค tโ) รแตค tโ
  distl   : {tโ tโ tโ : ๐} โ tโ รแตค (tโ +แตค tโ) โท (tโ รแตค tโ) +แตค (tโ รแตค tโ)
  factorl : {tโ tโ tโ : ๐ } โ (tโ รแตค tโ) +แตค (tโ รแตค tโ) โท tโ รแตค (tโ +แตค tโ)
  idโท     : {t : ๐} โ t โท t
  _โ_     : {tโ tโ tโ : ๐} โ (tโ โท tโ) โ (tโ โท tโ) โ (tโ โท tโ)
  _โ_     : {tโ tโ tโ tโ : ๐} โ (tโ โท tโ) โ (tโ โท tโ) โ (tโ +แตค tโ โท tโ +แตค tโ)
  _โ_     : {tโ tโ tโ tโ : ๐} โ (tโ โท tโ) โ (tโ โท tโ) โ (tโ รแตค tโ โท tโ รแตค tโ)
  -- monad
  return : (T : ๐) โ T โท Singแตค T
  join : (T : ๐) โ Singแตค (Singแตค T) โท Singแตค T
  unjoin : (T : ๐) โ Singแตค T โท Singแตค (Singแตค T)
  tensorl : (Tโ Tโ : ๐) โ (Singแตค Tโ รแตค Tโ) โท Singแตค (Tโ รแตค Tโ)
  tensorr : (Tโ Tโ : ๐) โ (Tโ รแตค Singแตค Tโ) โท Singแตค (Tโ รแตค Tโ)
  tensor : (Tโ Tโ : ๐) โ (Singแตค Tโ รแตค Singแตค Tโ) โท Singแตค (Tโ รแตค Tโ)
  untensor : (Tโ Tโ : ๐) โ Singแตค (Tโ รแตค Tโ) โท (Singแตค Tโ รแตค Singแตค Tโ)
  plusl : (Tโ Tโ : ๐) โ (Singแตค Tโ +แตค Tโ) โท Singแตค (Tโ +แตค Tโ)
  -- comonad
  extract : (T : ๐) โ Singแตค T โท T
  cojoin : (T : ๐) โ Singแตค T โท Singแตค (Singแตค T)
  counjoin : (T : ๐) โ Singแตค (Singแตค T) โท Singแตค T
  cotensorl : (Tโ Tโ : ๐) โ Singแตค (Tโ รแตค Tโ) โท (Singแตค Tโ รแตค Tโ)
  cotensorr : (Tโ Tโ : ๐) โ Singแตค (Tโ รแตค Tโ) โท (Tโ รแตค Singแตค Tโ)
  coplusl : (Tโ Tโ : ๐) โ Singแตค (Tโ +แตค Tโ) โท (Singแตค Tโ +แตค Tโ)
  -- both?
  Singแตค : (Tโ Tโ : ๐) โ (Tโ โท Tโ) โ (Singแตค Tโ โท Singแตค Tโ)
  -- eta/epsilon
  ฮท : (T : ๐) โ ๐ โท (Singแตค T รแตค Recipแตค T)
  ฮต : (T : ๐) โ (Singแตค T รแตค Recipแตค T) โท ๐

